{"version":3,"sources":["components/services/contacts.js","components/Filter.js","components/Personform.js","components/Notification.js","components/DeleteContact.js","components/Person.js","App.js","index.js"],"names":["baseurl","axios","get","then","response","data","newObject","post","id","console","log","request","put","delete","Filter","search_name","set_search_name","person","Result","result","filter","to_search_contact","name","toLowerCase","number","findcontact","length","placeholder","onChange","event","target","value","Personform","newname","newnumber","setnewname","setnewnumber","setperson","seterrormessage","type","onClick","preventDefault","contactid","already_have","newobject","forEach","contact","window","confirm","contactServices","returnedData","setInterval","catch","error","concat","Notification","message","className","DeleteContact","returneddata","deletecontact","Person","map","key","Math","random","App","useState","errormessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fb7b0b5.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseurl = '/api/persons'\n\nconst getall = () => {\n    const request = axios.get(baseurl)\n    return request.then((response) => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseurl, newObject)\n    return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n    console.log('sending request..')\n    const request = axios.put(`${baseurl}/${id}`, newObject)\n    console.log(request)\n    return request.then((response) => response.data)\n}\n\nconst deletecontact = (id) =>\n{\n    console.log(\"Id = \",id)\n    const request = axios.delete(`${baseurl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getall, create, update , deletecontact}\n","import React from 'react'\n\nconst Filter = ({ search_name, set_search_name, person }) => {\n\n\n    const handlesearchname = (event) => set_search_name(event.target.value);\n\n    const findcontact = (to_search_contact) => {\n        let x_name = to_search_contact.name.toLowerCase()\n        let y_name = search_name.toLowerCase()\n        if (x_name === y_name) {\n        // if (x_name.includes(y_name)) {\n            return (\n                <div>\n                    {to_search_contact.name} {to_search_contact.number}\n                </div>\n            )\n        } \n    \n\n}\n\nconst Result = () => {\n    const result = person.filter((to_search_contact) => findcontact(to_search_contact))\n    // console.log(\"Filter shown with: \",{result})\n    // console.log(result.name)\n    if (result.length > 0) {\n        return (\n            <div>\n                {result[0].name} {result[0].number}\n            </div>\n        )\n    } else {\n        return (\n            <></>\n        )\n    }\n}\n\nreturn (\n    < form >\n        filter shown with\n        <input placeholder = {'Enter name'} onChange={handlesearchname} >\n        </input>\n        <div>\n            <Result />\n        </div>\n    </form >\n)\n}\nexport default Filter","import React from 'react'\nimport contactServices from './services/contacts'\n\n// const Personform = ({ newname, newnumber, person, setnewname, setnewnumber, setperson ,seteffectrender}) => {\nconst Personform = ({ newname, newnumber, person, setnewname, setnewnumber, setperson, seterrormessage }) => {\n\n    const handle_name_change = (event) => {\n\n        // console.log(event.target.value)\n        setnewname(event.target.value)\n    }\n    const handel_number_change = (event) => {\n        setnewnumber(event.target.value)\n    }\n\n\n    const addnewcontact = (event) => {\n\n        event.preventDefault()\n        var already_have = false\n\n        const newobject = {\n            name: newname,\n            number: newnumber\n        }\n        console.log('given contact to be updated:',newobject)\n        // const already_have = person.filter((contact)=> contact.name === newname ? true :false)\n        // console.log(already_have)\n        // console.log(newname)\n        let contactid;\n\n        person.forEach((contact) => {\n            if (contact.name === newname) {\n                already_have = true\n                contactid = contact.id;\n            }\n        })\n        // console.log(typeof(contactid),'before tostring',contactid)\n        // contactid = contactid.toString()\n        // console.log(typeof(contactid),'after tostring',contactid)\n\n        // console.log(already_have)\n        // console.log(newname)\n\n        if (!already_have) {\n            contactServices\n                .create(newobject)\n                .then((returnedData) => {\n                    setperson(person.concat(returnedData))\n                    setnewname('')\n                    setnewnumber('')\n\n                    seterrormessage(`Added ${newname}`)\n                    setInterval(() => {\n                        seterrormessage(null)\n\n                    }, 4000);\n\n                })\n                .catch(error => {\n                    console.log(\"Error response data:::\",error.response.data)\n                    seterrormessage(`Person validation failed: Path (${newname}) is shorter than minimum allowed length (3).`)\n                    setInterval(() => {\n                        seterrormessage(null)\n\n                    }, 5000);\n                })\n        } else if (window.confirm(`'${newname}' is already added to phonebook, replace old number with new one?`)) {\n            // alert(newname + ' is already added to phonebook');\n            console.log('updating.......................')\n            contactServices\n                .update(contactid, newobject)\n                .then((returnedData) => {\n                    seterrormessage(`Updated ${newname}`)\n\n                    setInterval(() => {\n                        seterrormessage(null)\n\n                    }, 4000);\n\n                    return (returnedData)\n                })\n                .catch((error) => {\n                    seterrormessage(`Not updated '${newname}'`)\n                    console.log('error:',error)\n                    setInterval(() => {\n                        seterrormessage(null)\n\n                    }, 4000);\n\n                })\n\n\n        }\n\n\n    }\n\n\n\n\n    return (\n        <form>\n            <div>\n                Name: <input value={newname} placeholder={'Enter name'} onChange={handle_name_change} />\n\n            </div>\n            <div>\n                Number: <input value={newnumber} placeholder={'Enter number'} onChange={handel_number_change} />\n            </div>\n\n            <div>\n                <button type=\"submit\" onClick={addnewcontact} >\n                    add\n        </button>\n            </div>\n\n        </form>\n    )\n}\n\nexport default Personform","import React from 'react'\n\n\nconst Notification = ({message}) => {\n    if(message === null)\n    {\n        return(null)\n    }\n\n    return (\n        <div className = 'error'>\n            {message}\n        </div>\n\n    )\n}\n\nexport default Notification","import React from 'react'\nimport contactServices from './services/contacts'\nimport Notification from './Notification'\n\nconst deletecontact = (person,seterrormessage) => {\n\n    // alert(`delete contact `)\n    if (window.confirm(`Contact \"${person.name}\" will be deleted.`)) {\n        return (\n\n            contactServices\n                .deletecontact(person.id)\n                .then((returneddata) => {\n                    // console.log(\"Delete data:\", returneddata)\n                    seterrormessage(`'${person.name}' Deleted`)\n                    setInterval(() => {\n                        seterrormessage(null)\n                    }, 4000);\n                    return (returneddata)\n                })\n                .catch(() => {\n                    seterrormessage(`'${person.name}' not exist in server. Deletion cann't proceed.`)\n                    setInterval(() => {\n                        seterrormessage(null)\n                    }, 4000);\n                })\n\n        )\n\n    }\n    return(<></>)\n\n}\n\nconst DeleteContact = ({ person,seterrormessage }) => {\n\n\n    // console.log(\"delete person id: = \", person.id)\n\n\n\n    // console.log(\"deleteContact:....\")\n\n    return (\n        <>\n\n            <button onClick={() => deletecontact(person,seterrormessage)}>delete</button>\n            {/* <form>\n                <button type = \"submit\" onClick = {() => deletecontact(person)}>delete</button>\n            </form> */}\n        </>\n    )\n\n}\n\nexport default DeleteContact","import React from 'react'\nimport DeleteContact from './DeleteContact'\n\nconst Person = ({person,seterrormessage}) => {\n\n    return (\n        <div>\n            {person.map((contact) => <p key={contact.name.length + Math.random()}> {contact.name}{\"___\"} {contact.number} {<DeleteContact person = {contact} seterrormessage = {seterrormessage}/>}</p>)}\n            \n        </div>\n\n    )\n}\n\nexport default Person","import React, { useState, useEffect } from 'react'\nimport contactServices from './components/services/contacts'\nimport Filter from './components/Filter'\nimport Personform from './components/Personform'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\n\n\n\nconst App = () => {\n    const [person, setperson] = useState([])\n    const [newname, setnewname] = useState('')\n    const [newnumber, setnewnumber] = useState('')\n    const [search_name, set_search_name] = useState('')\n    const [errormessage,seterrormessage] = useState(null)\n    // const [effectrender, seteffectrender] = useState(false)\n\n    // console.log(person.length)\n    useEffect(() => {\n        // console.log(\"Effect\")\n\n        contactServices\n        .getall()\n            .then(\n                (returnedData) => {\n                    console.log(\"getting data from server.....(done)\")\n                    setperson(returnedData)\n                    // seteffectrender(false)\n\n                }\n            )\n\n    }, [])\n\n\n\n    return (\n        <div>\n\n            <h2>\n                Phonebook\n            </h2>\n            <div>\n            <Notification message={errormessage} />\n            </div>\n\n            <Filter search_name={search_name} set_search_name={set_search_name} person={person} />\n\n\n            <h2>\n                add a new\n            </h2>\n            {/* <Personform newname={newname} newnumber={newnumber} person={person} setnewname={setnewname} setnewnumber={setnewnumber} setperson={setperson} seteffectrender = {seteffectrender}/> */}\n\n            <Personform newname={newname} newnumber={newnumber} person={person} setnewname={setnewname} setnewnumber={setnewnumber} setperson={setperson} seterrormessage = {seterrormessage} />\n\n\n            <h2>\n                Numbers\n            </h2>\n            <Person person={person} seterrormessage = {seterrormessage} />\n        </div>\n    )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport  './index.css'\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}